<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Git on mahaoliang.tech</title>
        <link>https://mahaoliang.tech/tags/git/</link>
        <description>Recent content in Git on mahaoliang.tech</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 29 Jul 2025 21:05:21 +0800</lastBuildDate><atom:link href="https://mahaoliang.tech/tags/git/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使用 1Password 和 SSH Agent Forwarding 提升远程开发体验</title>
        <link>https://mahaoliang.tech/p/%E4%BD%BF%E7%94%A8-1password-%E5%92%8C-ssh-agent-forwarding-%E6%8F%90%E5%8D%87%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C/</link>
        <pubDate>Tue, 29 Jul 2025 21:05:21 +0800</pubDate>
        
        <guid>https://mahaoliang.tech/p/%E4%BD%BF%E7%94%A8-1password-%E5%92%8C-ssh-agent-forwarding-%E6%8F%90%E5%8D%87%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C/</guid>
        <description>&lt;p&gt;作为开发者，我们经常需要通过 SSH 连接到远程 Linux 服务器进行开发。工具如 VS Code 的 Remote-SSH 插件，让我们几乎感觉不到自己是在一台远程机器上工作。但一个常见的痛点随之而来：&lt;strong&gt;SSH 密钥管理&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们希望：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 SSH 密钥登录服务器，并向 Git 仓库（如 GitHub）推送代码。&lt;/li&gt;
&lt;li&gt;对每一次 Git 提交进行签名，以验证提交的来源。&lt;/li&gt;
&lt;li&gt;最重要的一点：&lt;strong&gt;不希望将包含私钥的任何文件拷贝到远程服务器上&lt;/strong&gt;，以防服务器被入侵导致私钥泄露。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;幸运的是，通过 1Password 内置的 SSH Agent 和 SSH Agent Forwarding 技术，我们可以完美地解决这个问题。本文将带你一步步配置，实现安全、无缝的远程开发流程。&lt;/p&gt;
&lt;h2 id=&#34;核心概念简介&#34;&gt;核心概念简介&lt;/h2&gt;
&lt;p&gt;在开始之前，我们先简单了解几个关键概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SSH Agent (SSH 代理)&lt;/strong&gt;：它就像一个临时的密钥管理员。你可以在会话开始时，将解密的私钥（decrypted private key）加载到 Agent 中。之后，任何需要使用该密钥的 SSH 操作都会向 Agent 请求，而无需你反复输入密码。当你关闭终端会话时，Agent 也会随之关闭，密钥被安全地清除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;1Password SSH Agent&lt;/strong&gt;：1Password 8 及以上版本内置了一个功能强大的 SSH Agent。它将你的 SSH 私钥安全地存储在 1Password 保管库中，并通过一个安全的套接字文件（socket file）与你的系统交互。这意味着你的私钥永远不会以明文形式存在于磁盘上，所有使用请求都需要经过 1Password 的授权（例如 Touch ID 或主密码）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SSH Agent Forwarding (SSH 代理转发)&lt;/strong&gt;：这是一个非常强大的 SSH 功能。当你从本地电脑 SSH 到远程服务器时，它可以建立一个安全通道，将远程服务器上需要密钥认证的操作请求，“转发”回你的&lt;strong&gt;本地电脑&lt;/strong&gt;，交由你本地的 SSH Agent 来处理。这样一来，远程服务器本身完全不需要存储任何私钥。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;我们的目标流程&#34;&gt;我们的目标流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在本地电脑上，1Password 管理着我们的 SSH 私钥。&lt;/li&gt;
&lt;li&gt;通过 VS Code Remote-SSH 或终端连接到远程服务器，并启用 Agent Forwarding。&lt;/li&gt;
&lt;li&gt;在远程服务器上，执行 &lt;code&gt;git push&lt;/code&gt; 时，认证请求被转发回本地，由 1Password 处理。&lt;/li&gt;
&lt;li&gt;在远程服务器上，执行 &lt;code&gt;git commit&lt;/code&gt; 时，签名请求也被转发回本地，由 1Password 处理和授权。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;配置流程&#34;&gt;配置流程&lt;/h2&gt;
&lt;h3 id=&#34;前提条件&#34;&gt;前提条件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;你已经安装了 1Password 8 或更高版本的桌面客户端。&lt;/li&gt;
&lt;li&gt;你的 SSH 密钥已经创建并保存在 1Password 的 &lt;code&gt;SSH 密钥&lt;/code&gt; 分类中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第一步配置本地电脑让-ssh-使用-1password&#34;&gt;第一步：配置本地电脑，让 SSH 使用 1Password&lt;/h3&gt;
&lt;p&gt;首先，我们需要告诉本地的 SSH 客户端，让它把所有密钥相关的请求都交给 1Password 处理。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在 1Password 中启用 SSH Agent&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开 1Password 桌面应用。&lt;/li&gt;
&lt;li&gt;进入 &lt;code&gt;设置&lt;/code&gt; -&amp;gt; &lt;code&gt;开发者&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;勾选 &lt;code&gt;使用 SSH 代理&lt;/code&gt;。
&lt;img src=&#34;https://cdn.mahaoliang.tech/2024/202507292109013.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ssh agent&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;配置本地 SSH 配置文件 (&lt;code&gt;~/.ssh/config&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参考 1password 的&lt;a class=&#34;link&#34; href=&#34;https://developer.1password.com/docs/ssh/get-started/#step-4-configure-your-ssh-or-git-client&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;，我们有两种方式告诉 SSH 客户端 Agent 在哪里：&lt;code&gt;IdentityAgent&lt;/code&gt; 指令和 &lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt; 环境变量。推荐使用 &lt;code&gt;IdentityAgent&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;编辑你&lt;strong&gt;本地电脑&lt;/strong&gt;上的 &lt;code&gt;~/.ssh/config&lt;/code&gt; 文件（如果不存在，请创建它）。在文件顶部添加以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 告诉所有 SSH 连接 (*) 都使用 1Password 的 Agent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  IdentityAgent &lt;span class=&#34;s2&#34;&gt;&amp;#34;~/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;验证配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;本地电脑&lt;/strong&gt;的终端里运行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh-add -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果配置成功，它会列出你在 1Password 中存储的所有 SSH 密钥的公钥指纹。这证明你的本地 SSH 客户端已经成功与 1Password 对接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;第二步配置连接启用-agent-forwarding&#34;&gt;第二步：配置连接，启用 Agent Forwarding&lt;/h3&gt;
&lt;p&gt;现在，我们需要在连接到特定远程服务器时，启用 Agent Forwarding 功能。最佳实践依然是修改 &lt;code&gt;~/.ssh/config&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;继续编辑你&lt;strong&gt;本地电脑&lt;/strong&gt;上的 &lt;code&gt;~/.ssh/config&lt;/code&gt; 文件，为你的服务器添加一个专有配置块：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 给你的远程服务器起一个别名，方便连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host my-dev-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    HostName &amp;lt;your_server_ip_or_domain&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    User mahaoliang
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ForwardAgent yes   &lt;span class=&#34;c1&#34;&gt;# &amp;lt;-- 关键！启用 Agent Forwarding&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Host my-dev-server&lt;/code&gt;: 这是你连接时使用的快捷别名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HostName&lt;/code&gt;: 服务器的实际 IP 或域名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;User&lt;/code&gt;: 你在服务器上的用户名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ForwardAgent yes&lt;/code&gt;: 这就是开启 Agent Forwarding 的开关。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在，你可以通过 &lt;code&gt;ssh my-dev-server&lt;/code&gt; 或在 VS Code Remote-SSH 中直接连接到 &lt;code&gt;my-dev-server&lt;/code&gt;，转发功能会自动启用。&lt;/p&gt;
&lt;h3 id=&#34;第三步配置远程服务器上的-git&#34;&gt;第三步：配置远程服务器上的 Git&lt;/h3&gt;
&lt;p&gt;这是最后一步，也是最关键的一步。我们需要告诉远程服务器上的 Git，如何使用我们转发过来的 SSH Agent 进行提交签名。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;连接并验证转发&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，连接到你的远程服务器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh my-dev-server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;连接成功后，在&lt;strong&gt;远程服务器&lt;/strong&gt;的终端上，再次运行验证命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh-add -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果 Agent Forwarding 正常工作，这里显示的输出应该和你&lt;strong&gt;本地电脑&lt;/strong&gt;的输出&lt;strong&gt;完全一样&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;如果提示“Could not open a connection to your authentication agent.”，请检查 SSH 服务配置，确保 &lt;code&gt;AllowAgentForwarding yes&lt;/code&gt; 已启用。&lt;/p&gt;
&lt;p&gt;使用 vim 打开 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; 文件，找到 &lt;code&gt;AllowAgentForwarding&lt;/code&gt; 配置项，设置为 &lt;code&gt;yes&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AllowAgentForwarding yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;保存后重启 SSH 服务使配置生效：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;systemctl restart sshd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;再次连接你的远程服务器，执行 &lt;code&gt;ssh-add -l&lt;/code&gt;，确认 Agent Forwarding 正常工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;获取用于签名的公钥&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Git 需要知道用哪个具体的密钥来签名。我们需要提供完整的公钥字符串作为标识。在&lt;strong&gt;远程服务器&lt;/strong&gt;上运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh-add -L
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个命令会列出 Agent 中所有密钥的完整公钥。复制你想要用来签名的那一行，它看起来像这样：
&lt;code&gt;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICxxxxxxxxxxxxxxxxxxxx your-key-comment&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;配置远程服务器的 &lt;code&gt;.gitconfig&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在，编辑你&lt;strong&gt;远程服务器&lt;/strong&gt;上的 &lt;code&gt;~/.gitconfig&lt;/code&gt; 文件。将你原来的配置更新如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[user]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;mahaoliang@gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    name = mahaoliang
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    # 将 signingkey 的值设置为你上一步复制的完整公钥字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICxxxxxxxxxxxxxxxxxxxx your-key-comment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[gpg]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 告诉 Git 使用 ssh 程序进行签名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;format&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;ssh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[commit]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 让所有提交都默认进行签名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;gpgsign&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最重要的改动在于 &lt;code&gt;signingkey&lt;/code&gt;。我们不再使用一个文件路径，而是直接提供了公钥本身。这让 Git 可以直接向转发过来的 Agent 请求使用这个特定的密钥进行签名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;大功告成来测试一下吧&#34;&gt;大功告成！来测试一下吧&lt;/h3&gt;
&lt;p&gt;一切准备就绪！在远程服务器上，进入你的任意一个 git 项目，尝试创建一个新提交：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit --allow-empty -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Test: Signed commit with 1Password Agent Forwarding&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此时，奇妙的事情发生了：你的&lt;strong&gt;本地电脑&lt;/strong&gt;上会弹出 1Password 的授权请求，提示你应用正在请求使用你的 SSH 密钥。通过 Touch ID 或输入主密码授权后，远程服务器上的 &lt;code&gt;git commit&lt;/code&gt; 命令瞬间完成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.mahaoliang.tech/2024/202507292112652.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ssh key&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;最后，检查一下你的提交日志：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git log --show-signature -1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;你将会看到类似下面的输出，&lt;code&gt;Good signature&lt;/code&gt; 明确告诉你，这次提交已经由你的密钥成功签名！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;commit &amp;lt;commit_hash&amp;gt; (HEAD -&amp;gt; main)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Good &amp;#34;git&amp;#34; signature for mahaoliang@gmail.com with ED25519 key SHA256:GKaU0ZCgehQ73X...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author: mahaoliang &amp;lt;mahaoliang@gmail.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date:   ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Test: Signed commit with 1Password Agent Forwarding
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;下图展示了使用 1Password 和 SSH Agent Forwarding 进行远程 Git 提交签名的核心流程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.mahaoliang.tech/2024/202507301201877.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;flow&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;图中组件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;本地电脑 (Local)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开发者&lt;/strong&gt;：操作的发起者。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1Password SSH Agent&lt;/strong&gt;：安全存储私钥，并处理所有签名请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSH Client&lt;/strong&gt;：本地的 SSH 程序，配置为使用 1Password Agent 并启用转发。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;远程服务器 (Remote)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;远程终端&lt;/strong&gt;：开发者在服务器上的工作界面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt;：版本控制工具，配置为使用 SSH 进行签名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSH Daemon&lt;/strong&gt;：服务器上的 SSH 服务，负责建立安全连接和转发请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;交互流程详解&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;发起提交&lt;/strong&gt;：开发者在&lt;strong&gt;远程终端&lt;/strong&gt;中执行 &lt;code&gt;git commit&lt;/code&gt; 命令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;请求签名&lt;/strong&gt;：&lt;strong&gt;Git&lt;/strong&gt; 根据配置，向 SSH 服务请求使用密钥进行签名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转发请求&lt;/strong&gt;：远程服务器的 &lt;strong&gt;SSH Daemon&lt;/strong&gt; 将签名请求通过加密的 SSH 隧道&lt;strong&gt;转发回&lt;/strong&gt;本地电脑的 &lt;strong&gt;SSH Client&lt;/strong&gt;。这是 Agent Forwarding 的核心。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;请求 1Password&lt;/strong&gt;：本地的 &lt;strong&gt;SSH Client&lt;/strong&gt; 将请求交给 &lt;strong&gt;1Password SSH Agent&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;请求用户授权&lt;/strong&gt;：&lt;strong&gt;1Password&lt;/strong&gt; 在本地电脑上弹出提示，向&lt;strong&gt;开发者&lt;/strong&gt;请求授权。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户授权&lt;/strong&gt;：&lt;strong&gt;开发者&lt;/strong&gt;在本地进行身份验证（如 Touch ID 或主密码）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;返回签名&lt;/strong&gt;：授权成功后，&lt;strong&gt;1Password&lt;/strong&gt; 生成签名并返回给本地 &lt;strong&gt;SSH Client&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;返回签名至远程&lt;/strong&gt;：签名通过 SSH 隧道被安全地&lt;strong&gt;传回&lt;/strong&gt;远程服务器的 &lt;strong&gt;SSH Daemon&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完成提交&lt;/strong&gt;：远程的 &lt;strong&gt;Git&lt;/strong&gt; 进程收到有效的签名，成功创建提交，并在&lt;strong&gt;远程终端&lt;/strong&gt;中显示成功信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过以上配置，我们构建了一个既安全又便捷的远程开发工作流。你的私钥始终安全地躺在本地的 1Password 保管库中，而远程服务器上的所有 Git 操作（认证和签名）都能够无缝、安全地使用它。这不仅提升了安全性，也大大简化了多服务器环境下的密钥管理，让你能更专注于编码本身。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
